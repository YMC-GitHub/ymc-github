name: test

on:
# # fired on branch main push
#   push:
#     branches:
#       - main
# # fired on branch main pull_request
#   pull_request:
#     branches:
#       - main
# fired on schedule per 20 min
  schedule:
    # note: in github beijing time +8 h
    # - cron: 0 20 * * 0-5
    # - cron: 0 20 * * 0-5 #  runs at minute 0 of the 4th beijing hour from week 0 to 5
    - cron: 18 17,22,10 * * 1,3,5 #  runs at enable the beijing 1:18,6:18,18:18 from week 1 ,week 3 , week 5
    - cron: 8 17,22,10 * * 0,2,4,6
    # - cron: 20/15 * * * * # runs every 15 minutes starting from minute 20 through 59 (minutes 20, 35, and 50)
    # - cron: 20/15 17 * * 2 # runs every 15 minutes starting from minute 20 through 59 (minutes 20, 35, and 50)
  workflow_dispatch:
jobs: 
  # build job
  build:
    runs-on: ${{ matrix.os }} # run on spec os
    timeout-minutes: 10

    strategy:
      matrix:
        # set nodejs matrix
        node_version: [12.x, 14.x, 16.x]
        # set os matrix
        os: [ubuntu-latest, windows-latest, macos-latest]
        # architecture: [x86, x64]
        architecture: 
         - x64
      fail-fast: false

    name: Node ${{ matrix.node_version }} - ${{ matrix.architecture }} on ${{ matrix.os }}
    steps:
      - name: sync git repo
        uses: actions/checkout@v3

      - name: install pnpm
        uses: pnpm/action-setup@v2 #https://github.com/pnpm/action-setup
        with:
          version: 6.34.0

      - name: set node version to ${{ matrix.node_version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node_version }}
          architecture: ${{ matrix.architecture }}
          cache: pnpm

      - name: set pnpm store directory
        # run: pnpm config set store-dir ~/.pnpm-store
        run: pnpm config set store-dir .pnpm-store
      # https://github.com/pnpm/action-setup#use-cache-to-reduce-installation-time

    #   - name: get pnpm store directory
    #     id: pnpm-cache
    #     run: |
    #       echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

    #   - uses: actions/cache@v3
    #     name: set pnpm cache directory
    #     with:
    #       path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
    #       key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
    #       restore-keys: |
    #         ${{ runner.os }}-pnpm-store-

      - name: install dependencies
        run: pnpm i

    #   - name: build
    #     run: pnpm run build

    #   - name: lint
    #     run: pnpm run lint

    #   - name: run ci
    #     run: pnpm ci
      - name: run test
        run: pnpm run test

    #   - uses: actions/setup-node@v3
    #     with:
    #       node-version: '14.x'
    #       registry-url: 'https://registry.npmjs.org'
    #   - run: npm publish
    #     name: push to npmjs with npm
    #     env:
    #       NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

    #   - uses: actions/setup-node@v3
    #     with:
    #       registry-url: 'https://npm.pkg.github.com'
    #   - run: npm publish
    #     name: push to grp with npm
    #     env:
    #       NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    #   - uses: ymc-gitub/ymc-gitub@master
    #     with:
    #       WAKATIME_API_KEY: ${{ secrets.WAKATIME_API_KEY }}
    #       GH_TOKEN: ${{ secrets.GH_TOKEN }}